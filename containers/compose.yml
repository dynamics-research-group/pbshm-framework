services:
  pbshm-framework-db:
    image: mongo:8.0.8
    container_name: pbshm-framework-db
    restart: unless-stopped
    # Uncomment below if using secrets
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME_FILE=/run/secrets/pbshm_framework_mongo_auth_username
    #   - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/pbshm_framework_mongo_auth_password
    # secrets:
    #   - pbshm_framework_mongo_auth_username
    #   - pbshm_framework_mongo_auth_password
    volumes:
      - mongodb_data:/data/db
    networks:
      - pbshm-framework-backend-network
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--host",
          "pbshm-framework-db",
          "--port",
          "27017",
          "--eval",
          '"db.runCommand(''ping'').ok"',
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  pbshm-framework-frontend:
    build:
      context: .
      dockerfile: ./Containerfile
    container_name: pbshm-framework-frontend
    restart: unless-stopped
    environment:
      # Uncomment below if using secrets
      # - MONGO_AUTH_USERNAME_FILE=/run/secrets/pbshm_framework_mongo_auth_username
      # - MONGO_AUTH_PASSWORD_FILE=/run/secrets/pbshm_framework_mongo_auth_password
      # - USER_PASSWORD_FILE=/run/secrets/pbshm_framework_user_password
      - MONGO_HOSTNAME=pbshm-framework-db
      - MONGO_PORT=27017
      - MONGO_AUTH_DB=admin
      - MONGO_DATA_DB=pbshm
      - MONGO_USER_COLLECTION=users
      - MONGO_DEFAULT_COLLECTION=structures
      - USER_EMAIL=user@pbshm.ac.uk
      - USER_FIRST_NAME=Admin
      - USER_SECOND_NAME=User
      - GUNICORN_WORKERS=4
      - GUNICORN_PORT=5000
      - GUNICORN_BIND=0.0.0.0
      - GUNICORN_TIMEOUT=30
      - GUNICORN_WORKER_CLASS=sync
      - GUNICORN_MAX_REQUESTS=0
      - GUNICORN_MAX_REQUESTS_JITTER=0
    # Uncomment below if using secrets
    # secrets:
    #   - pbshm_framework_mongo_auth_username
    #   - pbshm_framework_mongo_auth_password
    #   - pbshm_framework_user_password
    depends_on:
      pbshm-framework-db:
        condition: service_healthy
    networks:
      - pbshm-framework-backend-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:5000')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  pbshm-framework-caddy:
    image: caddy:2.10
    container_name: pbshm-framework-caddy
    restart: unless-stopped
    environment:
      - PBSHM_FRAMEWORK_FRONTEND_HOST=pbshm-framework-frontend
    ports:
      - 8080:8080
    volumes:
      - $PWD/caddy/Caddyfile:/etc/caddy/Caddyfile:Z
      - caddy_data:/data
      - caddy_config:/config


networks:
  pbshm-framework-backend-network:
    driver: bridge

# Uncomment below if using secrets
# secrets:
#   pbshm_framework_mongo_auth_username:
#     external: true
#   pbshm_framework_mongo_auth_password:
#     external: true
#   pbshm_framework_user_password:
#     external: true

volumes:
  mongodb_data:
  caddy_data:
  caddy_config:
