#
# WARNING: THIS CONTAINERFILE IS AUTO-GENERATED BY "apply-templates.py"
#
# PLEASE DO NOT EDIT THIS FILE DIRECTLY.
#

# Python version, e.g. 3.11, 3.13
ARG PYTHON_VERSION={{ python_version }}

# Image variant, e.g. -slim-trixie, -slim-bullseye
ARG PYTHON_IMAGE_VARIANT=-slim-{{ debian_version }}

# Stage 1: Base application with Python and PBSHM framework
FROM python:${PYTHON_VERSION}${PYTHON_IMAGE_VARIANT}

# PBSHM Framework Version
ARG PBSHM_FRAMEWORK_VERSION={{ framework_version }}

{% if needs_mongodb %}
# MongoDB version, e.g 8.0
ARG MONGODB_VERSION={{ database_version }}
{% endif %}

# User setup - Define default UID/GID for non-root container user
ARG USER=appuser
ARG GROUP=appuser
ARG UID=10001
ARG GID=10001

# Setup non-root user with configurable UID/GID
# and create app directory and set permissions for non-root user
RUN groupadd --gid ${GID} ${GROUP} && \
    useradd --uid ${UID} --gid ${GROUP} --create-home --shell /bin/bash ${USER} && \
    mkdir -p /app/development && \
    chown -R ${USER}:${GROUP} /app

{% if needs_mongodb or needs_supervisor or needs_caddy %}
# Install common packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gnupg \
    curl \
    debian-keyring \
    apt-transport-https

{% if needs_mongodb %}
# Install MongoDB
RUN curl -fsSL https://www.mongodb.org/static/pgp/server-${MONGODB_VERSION}.asc | gpg -o /usr/share/keyrings/mongodb-server-${MONGODB_VERSION}.gpg --dearmor && \
    echo "deb [ signed-by=/usr/share/keyrings/mongodb-server-${MONGODB_VERSION}.gpg ] http://repo.mongodb.org/apt/debian bookworm/mongodb-org/${MONGODB_VERSION} main" | tee /etc/apt/sources.list.d/mongodb-org-${MONGODB_VERSION}.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends mongodb-org && \
    mkdir -p /data/db /var/log/mongodb && \
    chown -R ${USER}:${GROUP} /data/db /var/log/mongodb
{% endif %}

{% if needs_supervisor %}
# Install supervisord and create supervisor sub config directory and set permissions
RUN apt-get install -y --no-install-recommends supervisor && \
    mkdir -p /etc/supervisor/supervisor_config.d /var/log/supervisor /run/supervisor && \
    chown -R ${USER}:${GROUP} /etc/supervisor /var/log/supervisor /run/supervisor
{% endif %}

{% if needs_caddy %}
# Install Caddy and create directories in one layer
RUN curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg && \
    curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends caddy && \
    mkdir -p /etc/caddy && \
    chown -R ${USER}:${GROUP} /etc/caddy
{% endif %}

# Tidy up leftover apt files
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/*
{% endif %}

# Switch to non-root user
USER ${USER}

# Need to add local bin to path as installing as user
ENV PATH=$PATH:/home/$USER/.local/bin

# Install pbshm-framework and dependencies from PyPI
RUN pip install --no-cache-dir --user pbshm-framework==${PBSHM_FRAMEWORK_VERSION} {{ wsgi_package }}

# Copy files
COPY --chown=${USER}:${GROUP} --chmod=640 ./assets/__init__.py /app/development/__init__.py
COPY --chown=${USER}:${GROUP} --chmod=755 ./assets/entrypoint-framework.sh /home/${USER}/entrypoint-framework.sh

{% if needs_supervisor %}
# Copy in supervisor configs
COPY --chown=${USER}:${GROUP} --chmod=644 ./assets/supervisord.conf /etc/supervisor/supervisord.conf
COPY --chown=${USER}:${GROUP} --chmod=640 ./assets/supervisor-framework.conf /etc/supervisor/supervisor_config.d/2-supervisor-framework.conf
{% endif %}

{% if needs_mongodb %}
# Copy MongoDB files
COPY --chown=${USER}:${GROUP} --chmod=755 ./assets/entrypoint-mongodb.sh /home/${USER}/entrypoint-mongodb.sh
COPY --chown=${USER}:${GROUP} --chmod=640 ./assets/supervisor-mongodb.conf /etc/supervisor/supervisor_config.d/1-supervisor-mongodb.conf
{% endif %}

{% if needs_caddy %}
# Copy Caddy files
ENV PBSHM_FRAMEWORK_FRONTEND_HOST=localhost
COPY --chown=${USER}:${GROUP} --chmod=644 ./assets/Caddyfile /etc/caddy/Caddyfile
COPY --chown=${USER}:${GROUP} --chmod=640 ./assets/supervisor-caddy.conf /etc/supervisor/supervisor_config.d/3-supervisor-caddy.conf
{% endif %}

{% if needs_supervisor %}
# Run the application with supervisor (all processes run as appuser)
ENTRYPOINT ["/usr/bin/supervisord"]
{% else %}
# Run the application
ENTRYPOINT ["/bin/bash", "/home/${USER}/entrypoint-framework.sh"]
{% endif %}
